[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "universal-mcp"
version = "0.1.23"
description = "Universal MCP acts as a middle ware for your API applications. It can store your credentials, authorize, enable disable apps on the fly and much more."
readme = "README.md"
authors = [
    { name = "Manoj Bajaj", email = "manojbajaj95@gmail.com" }
]
requires-python = ">=3.11"
license = { text = "MIT" }
dependencies = [
    "Jinja2>=3.1.3",
    "black>=25.1.0",
    "cookiecutter>=2.6.0",
    "gql[all]>=3.5.2",
    "jsonref>=1.1.0",
    "keyring>=25.6.0",
    "langchain-mcp-adapters>=0.0.3",
    "litellm>=1.30.7",
    "loguru>=0.7.3",
    "mcp>=1.9.3",
    "posthog>=3.24.0",
    "pydantic>=2.11.1",
    "pydantic-settings>=2.8.1",
    "pyyaml>=6.0.2",
    "rich>=14.0.0",
    "typer>=0.15.2",
    "opentelemetry-api",
    "opentelemetry-sdk",
    "opentelemetry-exporter-otlp",
]

[project.optional-dependencies]
dev = [
    "litellm>=1.30.7",
    "pre-commit>=4.2.0",
    "pyright>=1.1.398",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "ruff>=0.11.4",
]
playground = [
    "langchain-openai>=0.3.12",
    "langgraph>=0.3.24",
    "langgraph-checkpoint-sqlite>=2.0.6",
    "python-dotenv>=1.0.1",
    "streamlit>=1.44.1",
    "watchdog>=6.0.0",
    "litellm>=1.30.7",
]

[project.scripts]
universal_mcp = "universal_mcp.cli:app"

# ------------------------------
# Hatch build configuration
# ------------------------------
[tool.hatch.build.targets.sdist]
include = [
    "/src",
]

[tool.hatch.build.targets.wheel]
packages = ["src/universal_mcp"]

[tool.hatch.build.targets.wheel.shared-data]
"templates" = "universal_mcp/templates"

# ------------------------------
# Tool configurations
# ------------------------------
[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 120
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # Pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
]
ignore = ['E501', 'B008']
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-line-length = "dynamic"

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
